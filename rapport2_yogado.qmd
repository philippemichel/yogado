---
title: "YOGADO"
subtitle: "Rapport (suite)"
thanks: "Dr BOREL-KUHNER - Soins palliatifs - Douleur"
author: "Philippe MICHEL"
format: pdf
pdf-engine: lualatex
documentclass: scrartcl
mainfont: GillSans
mainfontoptions:
- Ligatures = Common
- Ligatures = Rare
sansfont: Source Sans Pro
monofont: Source Sans Pro
colorlinks: true
fontsize: 11pt
papersize: a4
lang: fr
fig-align: center
toc: true
lof: true
lot: false
cite-method: biblatex
bibliography: stat.bib
license: MIT
always_allow_html: true
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, cache = FALSE) 
```

```{r lib}
library(baseph)
library(janitor)
library(tidyverse)
library(lubridate)
library(kableExtra)
library(forestmodel)
```


## Description de la population

```{r demogi}
demog <- debutph("datas/CONSULT1.csv")
demog$evadoulmax <- as.numeric(as.character(demog$evadoulmax))
demog$evadoulmin <- as.numeric(as.character(demog$evadoulmin))
demog$evadoulmoy <- as.numeric(as.character(demog$evadoulmoy))
demog$dmat <- as.numeric(as.character(demog$dmat))
demog$dds <- as.numeric(as.character(demog$dds))
demog$qtevie <- as.numeric(as.character(demog$qtevie))
demog$qtenoralt <- factor(demog$qtenoralt,
  levels = c("Normale", "Altérée", "Très altérée")
)
demog$tempsprof <- factor(demog$tempsprof,
  levels = c("Temps plein", "Temps partiel", "Mi-temps thérapeutique")
)
#
demog_nom <- debutph("datas/noms_consult1.csv")
dnom <- demog_nom$nom
```


L'échantillon comporte `r nrow(demog)` cas. Il faut noter la très faible qualité des données avec énormément de données manquantes. Par exemple sur les questions concernant l'activité des patients les données manquantes représentent la moitié des cas donc sont inexploitables. 


```{r iconsult}
consult <- debutph("datas/consulty.csv")
 consult$consultdte <- dmy(consult$consultdte)
consult$evadte <- dmy(consult$evadte)
consult$evaldoulmax <- as.numeric(as.character(consult$evaldoulmax))
consult$evaldoulmin <- as.numeric(as.character(consult$evaldoulmin))
consult$evaldoulmoy <- as.numeric(as.character(consult$evaldoulmoy))
consult$dmmin <- as.numeric(as.character(consult$dmmin))
consult$ddscm <- as.numeric(as.character(consult$ddscm))
consult$qtevie <- as.numeric(as.character(consult$qtevie))
#
consultn <- debutph("datas/consultn.csv")
consultn <- consultn$nom
consult$qteviealt <- consult$qteviealt %>%
  fct_relevel(
    "Normale", "Altérée", "Très altérée"
  )

```

```{r tabp}
conc1 <- consult[,c(1,2,14:16)] |> 
  pivot_wider(names_from= visit, values_from = c(evaldoulmin,evaldoulmoy, evaldoulmax)) |> 
  clean_names()

conct <- conc1 |> 
  mutate(minimale  =  evaldoulmin_derniere_consultation - evaldoulmin_consultation_1) |> 
  mutate(moyenne  =  evaldoulmoy_derniere_consultation - evaldoulmoy_consultation_1) |>  
  mutate(maximale  =  evaldoulmax_derniere_consultation - evaldoulmax_consultation_1) 
#
conc <- conct |> 
  select(c(1,11:13)) |> 
  pivot_longer(!id, names_to = "score.douleur", values_to = "score")
conc$score.douleur<- conc$score.douleur %>%
  fct_relevel(
    "minimale", "moyenne", "maximale"
  ) 
```



```{r pred1}
tt <- left_join(demog,conct, by = "id")
```

## Facteurs favorisants

### Troubles de l'humeur

Seulement deux sujets déclarent ne pas avoir de trouble de l'humeur avant la yogathérapie. L'échantillon est donc trop faible pour faire la moindre analyse. 

### Qualité de vie

```{r}
#| label: qdv1
#| fig-cap: "Qualité de vie & effet de la yogathérapie"


xx <- tt |> 
  select(33,45) |> 
  transmute('Qualité de vie' = qtenoralt,
            maximale)

ll <- lm(maximale~., data = xx)
all <- anova(ll)
all <- beaup(all[[5]][1], affp = 1)
forest_model(ll)
```

La qualité de vie avant l'inclusion ne semble pas influer le résultat (`r all`). L'effectif dans la classe `Qualité de vie` = Normale est très faible, l'interprétation de ce résultat doit être prudente.

## Évolution des paramètres dynamiques

```{r}
#| label: dyna1

tt <- debutph("datas/avap.csv") |> 
  filter(visit != "CONSULTATION YOGA-THERAPIE Intermediaire") |> 
  mutate(visit  = factor(visit))
  tt$visit <- tt$visit %>%
  fct_recode(
    "Avant" = "CONSULTATION YOGA-THERAPIE #1",
    "Après" = "DERNIERE CONSULTATION YOGA-THERAPIE"
  )

zz <- tt |> 
  select(subjid, visit,dmmin,ddscm) |> 
  pivot_wider(names_from = visit, values_from = c(dmmin,ddscm))  

names(zz) <- c("ID", "dmminav", "dmminap","ddscmav","ddscmap")
zz <- zz |> 
  mutate(dmmin = dmminap - dmminav) |> 
  mutate(dmmin = ddscmap - ddscmav)
```

### Temps de déverouillage

```{r dev1}
zzt <- t.test(zz$dmminap,zz$dmminav, paired = TRUE)
zzp <- beaup(zzt$p.value, affp = 1)
#
mav <- round(mean(zz$dmminav, na.rm = TRUE),3)
eav <- round(sd(zz$dmminav, na.rm = TRUE),3)
map <- round(mean(zz$dmminap, na.rm = TRUE),3)
eap <- round(sd(zz$dmminap, na.rm = TRUE),3)
nzz <- length(na.omit(zz$dmmin))
```
Pour le temps de déverouillage (n = `r nzz`): 

**Avant** : Moyenne ± écart-type : `r mav` ±`r eav`

**Après** : Moyenne ± écart-type : `r map` ±`r eap`

`r zzp`

```{r}
#| label: devg
#| fig-cap: "Temps de déverouillage matinal avant/après"

tt |> 
  ggplot() +
  aes(x = visit, y = dmmin, fill = visit) +
  geom_violin() +
  geom_boxplot(fill = "white", width = 0.2) + 
  labs(title = "Évolution du temps de déverouillage matinal",
       subtitle = "n = 31",
       x = "Consultation",
       y = " temps de déverouillage matinal (min)",
       caption = "Évolution du temps de déverouillage matinal"
) +
  theme_light() +
  ggsci::scale_fill_lancet() +
  theme(
    plot.title = element_text(size = 16, face = "bold"),
    plot.subtitle = element_text(size = 12),
    axis.title.x = element_text(),
    axis.title.y = element_text(
      size = 12
    ),
    axis.text.x = element_text(
      size = 12, 
      angle = 00,
      hjust = 0
    ),
    axis.text.y = element_text(size = 12),
    legend.position = "none")
```
### Distance doigts-sol

```{r dev2}
zzt <- t.test(zz$ddscmav,zz$ddscmap, paired = TRUE)
zzp <- beaup(zzt$p.value, affp = 1)
#
mdsv <- round(mean(zz$ddscmav, na.rm = TRUE),3)
edsv <- round(sd(zz$ddscmav, na.rm = TRUE),3)
mdsp <- round(mean(zz$ddscmap, na.rm = TRUE),3)
edsp <- round(sd(zz$ddscmap, na.rm = TRUE),3)
nzzd <- length(na.omit(zz$ddscmap-zz$ddscmav))
```
Pour le temps de déverouillage (n = `r nzzd`): 

**Avant** : Moyenne ± écart-type : `r mdsv` ±`r edsv`

**Après** : Moyenne ± écart-type : `r mdsp` ±`r edsp`

`r zzp`

```{r}
#| label: DDSg
#| fig-cap: "Évolution de la distance doigt-sol"

tt |> 
  ggplot() +
  aes(x = visit, y = ddscm, fill = visit) +
  geom_violin() +
  geom_boxplot(fill = "white", width = 0.2) + 
  labs(title = "Évolution de la distance doigt-sol",
       subtitle = "n = 31",
       x = "Consultation",
       y = " Distance doigt-sol (cm)",
       caption = "Évolution de la distance doigt-sol"
) +
  theme_light() +
  ggsci::scale_fill_lancet() +
  theme(
    plot.title = element_text(size = 16, face = "bold"),
    plot.subtitle = element_text(size = 12),
    axis.title.x = element_text(),
    axis.title.y = element_text(
      size = 12
    ),
    axis.text.x = element_text(
      size = 12, 
      angle = 00,
      hjust = 0
    ),
    axis.text.y = element_text(size = 12),
    legend.position = "none")
```

## Modification des traitements médicamenteux.

Les réponses à ces questions sont très fragmentaires & inutilisables.

## Technique
Les données démographiques on été décrites par la médiane & les quartiles pour les données numériques, en pourcentage pour les données catégorielles. Les intervalles de confiance ont été calculés par bootstrap.
Pour le critère principal la comparaison des deux groupes a été réalisée par un test de Wilcoxon sur séries appariées. La recherche de facteurs prédictifs a été réalisée par des test ANOVA. Vu le grand nombre de tests la limite de significabilité a été définie à 0,01.

L'analyse statistique a été réalisée grâce au logiciel **R**[@rstat] & à divers packages en particulier `tidyverse`[@tidy], `FactoMineR`[@facto] & `epiDisplay`[@epid].
